{"remainingRequest":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/thread-loader/dist/cjs.js!/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/babel-loader/lib/index.js!/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/eslint-loader/index.js??ref--13-0!/Users/shafimuhammad/Sites/billig.testingsanctum/src/store/index.js","dependencies":[{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/src/store/index.js","mtime":1610703469254},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/shafimuhammad/Sites/billig.testingsanctum/src/store/index.js"],"names":["Vue","Vuex","$","router","use","VueToast","Store","state","totalNotificationCount","online","connection","message","active_user","general_load","errors","auth","loggedIn","userRoles","user","mutations","UPDATA_NOTIFICATION_COUNT","payload","console","log","GET_ACTIVE_USER","role","UPDATE_LOGOUT_USER_INFO","UPDATE_GENERAL_LOADER","actions","generalLoader","context","commit","response","getingTotalCountOfNotification","window","axios","method","url","api_homeurl","headers","responseType","then","status","data","alert","catch","error","checkIfUserAlreadyLogedIn","length","currentRoute","fullPath","push","query","redirect","dispatch","meta","public","showtostrMessageNotifications","$toast","open","type","position","duration","displayMessageErrors","$this","formEvent","get","homeurl","resps","each","key","value","heighlightFormFields","compareValue","formData","getElementsByClassName","matchValue","childNodes","getAttribute","className","removeFormFieldsErrors","classList","remove","logOutSection","post","res","getHttp","postHttp","formDetails","deleteHttp","data_id","delete","modules"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport $ from \"jquery\";\nimport router from \"./../router/index.js\";\n\nVue.use(Vuex);\n\nimport VueToast from \"vue-toast-notification\";\n// Import one of available themes\n// import 'vue-toast-notification/dist/theme-default.css';\nimport \"vue-toast-notification/dist/theme-sugar.css\";\n \nVue.use(VueToast);\n/* eslint-disable */\nexport default new Vuex.Store({\n  state: {\n    totalNotificationCount : 0,\n    online : false,\n    connection: false,\n    message: '',\n    active_user : {},\n    general_load : false,\n    errors: {\n        connection: false\n    },\n    auth: {\n        loggedIn: false,\n        userRoles : '',\n        user : {}\n    }\n  },\n  mutations: {\n    UPDATA_NOTIFICATION_COUNT (state,payload) {\n      console.log(payload);\n      state.totalNotificationCount = payload;\n    },\n    GET_ACTIVE_USER (state,payload) {\n      state.auth.user = payload.user;\n      state.auth.loggedIn = true;\n      state.auth.userRoles = payload.role[0];\n    },\n    UPDATE_LOGOUT_USER_INFO (state,payload) {\n      state.auth.user = {};\n      state.auth.loggedIn = false;\n      state.auth.userRoles = '';\n    },\n    UPDATE_GENERAL_LOADER (state,payload) {\n      state.general_load = payload;\n    },\n  },\n  actions: {\n    generalLoader (context,payload) {\n      context.commit('UPDATE_GENERAL_LOADER',payload.response);\n    },\n    async getingTotalCountOfNotification (context) {\n      // Total Count\n          window.axios({\n              method: 'get',\n              url: window.api_homeurl + '/notifications/total-count',\n              headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n              responseType: 'json',\n          })\n          .then(function (response) {\n              if(response.status == 200) {\n                console.log(response.data);\n                context.commit('UPDATA_NOTIFICATION_COUNT',response.data);\n              } else {\n                  alert(\"Somme Server Error!\");\n              }\n          })\n          .catch(function (error) {\n              if(error.response.status == 401) {\n                  // $this.showtostrMessages(error.response.data.error,'error');\n                  return false;\n              } else {\n                  alert(\"some Server Error\");\n              }\n          });\n    },\n    async checkIfUserAlreadyLogedIn (context,payload) {\n      if(payload.response.status == 200) {\n        if( (payload.response.data.role.length > 0) && (payload.response.data.user) ) {\n          context.commit('GET_ACTIVE_USER',payload.response.data);\n          if(router.currentRoute.fullPath === '/login') {\n            // router.push('/home');\n            router.push(router.currentRoute.query.redirect ?? '/home');\n          }\n        } else {\n          context.dispatch('showtostrMessageNotifications',{ 'message':'Current User has no Role assign please assign him role first to process.','type':'error'} );\n        }\n      } else {\n        if((router.currentRoute.fullPath !== '/login') && (router.currentRoute.meta.public !== true) ) {\n          context.dispatch('showtostrMessageNotifications',{ 'message':'Unauthorized','type':'error'} );\n          router.push('/login?redirect='+router.currentRoute.fullPath);\n        }\n      }\n      \n    },\n    async showtostrMessageNotifications(context,payload) {\n      Vue.$toast.open({\n        message: payload.message,\n        type: payload.type,\n        position: 'top-right',\n        duration:4000\n        // all of other options may go here\n      });\n    },\n    async displayMessageErrors(context,payload) {\n      let $this = this;\n      let formEvent = payload.formEvent;\n      let response = payload.response;\n      if(formEvent) {\n        context.dispatch('removeFormFieldsErrors',{ 'formData' : payload.formEvent  } );\n      }\n\n      if(response.status == 204) {\n        await axios.get(window.homeurl+\"/api/user\").then(resps => {\n          context.commit('GET_ACTIVE_USER',resps.data);\n          context.dispatch('showtostrMessageNotifications',{ 'message':'Login Successfully!','type':'success'} );\n          // router.push('/home');\n          router.push(router.currentRoute.query.redirect ?? '/home');\n        });\n      }\n      else if(response.status == 200) {\n        if( (typeof response.data.status !== 'undefined' ) && (response.data.status == 'fail')) {\n          context.dispatch('showtostrMessageNotifications',{ 'message':response.data.message,'type':'error'} );      \n        } else {\n          context.dispatch('showtostrMessageNotifications',{ 'message':response.data.message,'type':'success'} );\n        }\n      }\n      else if(response.status == 422) {\n        $.each(payload.response.data.errors, function(key, value) {\n          context.dispatch('heighlightFormFields',{ 'key' : key , 'formData' : payload.formEvent  } );\n          context.dispatch('showtostrMessageNotifications',{ 'message':value[0],'type':'error'} );\n        });\n        context.dispatch('showtostrMessageNotifications',{ 'message':payload.response.data.message,'type':'error'} );\n      } else {\n        context.dispatch('showtostrMessageNotifications',{ 'message':payload.response.data.message,'type':'error'} );\n      }\n    },\n    async heighlightFormFields(context,payload) {\n      let compareValue = payload.key;\n        $.each(payload.formData.getElementsByClassName(\"form-group\") , function(key, value) {\n              let matchValue = value.childNodes[0].getAttribute('for');\n              \n              if(value.childNodes[1] !== 'undefined') {\n                if(matchValue == compareValue ) {\n                  value.childNodes[1].className += \" input-border-errors \";\n                }\n              }\n        });\n    },\n    async removeFormFieldsErrors (context,payload) {\n      $.each(payload.formData.getElementsByClassName(\"form-group\") , function(key, value) {\n            let matchValue = value.childNodes[0].getAttribute('for');\n            value.childNodes[1].classList.remove(\"input-border-errors\");\n      });\n    },\n    async logOutSection(context,payload){\n      await axios.post(window.homeurl+'/logout')\n      .then(res => {\n        if(res.status == 204) {\n          context.commit('UPDATE_LOGOUT_USER_INFO');\n          context.commit('UPDATE_GENERAL_LOADER',false);\n          router.push('/login');\n          context.dispatch('showtostrMessageNotifications',{ 'message':'Logout Successfully!','type':'success'} );\n        }\n      }).catch(error => {\n        context.dispatch('showtostrMessageNotifications',{ 'message':error.response.data.message,'type':'error'} );\n      })\n    },\n    async getHttp(context,payload){\n      return await axios.get(payload.url).then(resps => {\n          return resps;\n        }).catch(error => {\n          context.dispatch('showtostrMessageNotifications',{ 'message':error.response.data.message,'type':'error'} );\n        });\n    },\n    async postHttp(context,payload){\n\n      let $this = this;\n      let url = payload.url;\n      let formDetails = payload.formDetails;\n      let formEvent =  payload.formEvent;\n      if(formEvent) {\n        context.dispatch('removeFormFieldsErrors',{ 'formData' : payload.formEvent  } );\n      }\n      return await axios.post(url , formDetails).then(resps => {\n          return resps;\n        }).catch(error => {\n          // console.log(error.response);\n          $.each(error.response.data.errors, function(key, value) {\n            context.dispatch('heighlightFormFields',{ 'key' : key , 'formData' : payload.formEvent  } );\n            context.dispatch('showtostrMessageNotifications',{ 'message':value[0],'type':'error'} );\n          });\n          context.dispatch('showtostrMessageNotifications',{ 'message':error.response.data.message,'type':'error'} );\n        });\n    },\n    async deleteHttp(context,payload){\n\n      let $this = this;\n      let url = payload.url;\n      let formDetails = payload.data_id;\n      return await axios.delete(url).then(resps => {\n          return resps;\n        }).catch(error => {\n          context.dispatch('showtostrMessageNotifications',{ 'message':payload.response.data.message,'type':'error'} );\n        });\n    },\n  },\n  modules: {}\n});\n"]}]}
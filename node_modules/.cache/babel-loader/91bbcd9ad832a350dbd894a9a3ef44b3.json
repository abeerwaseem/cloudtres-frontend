{"remainingRequest":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/babel-loader/lib/index.js!/Users/abeerwaseem/Sites/cloudtres-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abeerwaseem/Sites/cloudtres-front/src/components/notification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/abeerwaseem/Sites/cloudtres-front/src/components/notification.vue","mtime":1609744687000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["notification.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dropdown notification-dropdown\">\n    <dropdown :align=\"'left'\" :y=\"50\" :x=\"50\" :before-open=\"callback\">\n      <template slot=\"icon\">\n        <button class=\"btn btn-secondary\" type=\"button\">\n          <i class=\"fas fa-bell\"></i>\n          <span class=\"badge\">{{ getNotificationCount }}</span>\n        </button>\n      </template>\n      <template slot=\"body\">\n        <div class=\"nofication-body not-len\">\n          <div\n            v-if=\"notification_loader\"\n            class=\"white-row loader-route notification-loader\"\n          >\n            <div class=\"lds-sub-ripple\">\n              <div></div>\n              <div></div>\n            </div>\n          </div>\n          <div\n            class=\"wrapper-notifications\"\n            v-if=\"\n              typeof total_notifications.data !== 'undefined' &&\n                Object.keys(total_notifications.data).length\n            \"\n          >\n            <div class=\"mark-as-read text-right\">\n              <span\n                ><a @click.prevent=\"markAllAsRead\" href=\"\"\n                  >Mark all as read</a\n                ></span\n              >\n            </div>\n            <div class=\"not-groups\">\n              <div\n                class=\"notifications-listing\"\n                v-for=\"(notf, nof_index) in total_notifications.data\"\n                :key=\"nof_index\"\n              >\n                <h5 class=\"date-heading\">{{ nof_index }}</h5>\n                <ul class=\"list-group list-group-flush\">\n                  <li\n                    class=\"list-group-item\"\n                    :class=\"{ active: !not.read_at }\"\n                    v-for=\"(not, not_index) in notf\"\n                    :key=\"not_index\"\n                  >\n                    <div\n                      class=\"media\"\n                      @click=\"\n                        markAsRead(not.id, not.data.redirect, not.read_at)\n                      \"\n                    >\n                      <avatar\n                        class=\"mr-3\"\n                        :username=\"not.data.body.name\"\n                      ></avatar>\n                      <div class=\"media-body\">\n                        <h6>{{ not.data.body.title }}</h6>\n                        <p>{{ not.data.body.message }}</p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"wrapper-notifications\">\n            <div class=\"no-notifications-found\">\n              <no-record-found></no-record-found>\n            </div>\n          </div>\n        </div>\n      </template>\n    </dropdown>\n  </div>\n</template>\n\n<script>\nimport Avatar from \"vue-avatar\";\nimport Dropdown from \"bp-vuejs-dropdown\";\nimport norecordfound from \"../components/no-record-found\";\nexport default {\n  name: \"notifications\",\n  components: {\n    Avatar,\n    Dropdown,\n    \"no-record-found\": norecordfound\n  },\n  data() {\n    return {\n      notification_loader: true,\n      total_count: 0,\n      total_notifications: {}\n    };\n  },\n  mounted() {\n    document.title =\n      \"PNC Work Bench - \" + this.$router.app._route.meta.pageTitle;\n    this.$store.dispatch(\"getingTotalCountOfNotification\");\n  },\n  computed: {\n    getNotificationCount() {\n      return this.$store.state.totalNotificationCount;\n    }\n  },\n  methods: {\n    async markAllAsRead() {\n      const $this = this;\n      $this.notification_loader = true;\n      const data = $this.$store.dispatch(\"postHttp\", {\n        url: \"notifications/mark-all-as-read\",\n        formDetails: null,\n        formEvent: null\n      });\n      await data.then(function(response) {\n        if (typeof response !== \"undefined\") {\n          $this.getNotifications();\n        }\n      });\n    },\n    async getNotifications() {\n      this.$store.dispatch(\"getingTotalCountOfNotification\");\n      const $this = this;\n      const data = $this.$store.dispatch(\"getHttp\", {\n        url:\n          \"notifications/total-notification?timezone=\" +\n          Intl.DateTimeFormat().resolvedOptions().timeZone\n      });\n      await data.then(function(response) {\n        if (typeof response != \"undefined\") {\n          $this.total_notifications = response;\n          $this.notification_loader = false;\n        }\n      });\n    },\n    async callback(resolve) {\n      this.notification_loader = true;\n      resolve();\n      await this.getNotifications();\n    },\n    async markAsRead(id, redirect, read_at) {\n      const $this = this;\n      $this.notification_loader = true;\n      if (read_at === null) {\n        const data = $this.$store.dispatch(\"postHttp\", {\n          url: \"notifications/mark-as-read/\" + id,\n          formDetails: {\n            id: id\n          },\n          formEvent: null\n        });\n        await data.then(function(response) {\n          if (typeof response !== \"undefined\") {\n            $this.getNotifications();\n            if (redirect.popup) {\n              // console.log(\"hey\");\n            } else {\n              if ($this.$route.fullPath == redirect.url) {\n                $this.$router.push(redirect.url + \"?reload=1\");\n              } else {\n                $this.$router.push(redirect.url);\n              }\n              $this.notification_loader = true;\n            }\n          }\n        });\n      } else {\n        $this.getNotifications();\n        if (redirect.popup) {\n          // console.log(\"hey\");\n        } else {\n          if ($this.$route.fullPath == redirect.url) {\n            $this.$router.push(redirect.url + \"?reload=1\");\n          } else {\n            $this.$router.push(redirect.url);\n          }\n        }\n        $this.notification_loader = true;\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.btn:not(:disabled):not(.disabled) {\n  cursor: pointer;\n  box-shadow: none;\n}\n.no-notifications-found {\n  text-align: center;\n  padding: 11px 0;\n  font-size: 22px;\n}\n.wrapper-notifications {\n  position: relative;\n  min-height: 150px;\n  .white-row.loader-route.notification-loader {\n    top: 0;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    z-index: 9;\n    .lds-sub-ripple {\n      display: block;\n      position: relative;\n      width: 80px;\n      height: 80px;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n}\n.nofication-body.not-len {\n  position: relative;\n  .white-row.loader-route.notification-loader {\n    position: absolute;\n    width: 96%;\n    top: 0;\n    height: 100%;\n    z-index: 9;\n    .lds-sub-ripple {\n      display: block;\n      position: relative;\n      width: 80px;\n      height: 80px;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n}\nbody header .top-right .dropdown .nofication-body.not-len {\n  padding: 15px 0;\n  .mark-as-read.text-right {\n    padding: 0 15px;\n  }\n}\nbody\n  header\n  .top-right\n  .dropdown\n  .nofication-body\n  .not-groups\n  .notifications-listing\n  h5.date-heading {\n  padding: 0 15px;\n}\nbody\n  header\n  .top-right\n  .dropdown\n  .nofication-body\n  .not-groups\n  .notifications-listing\n  .list-group-flush\n  li.list-group-item {\n  padding: 12px 15px;\n  &.active {\n    z-index: 2;\n    color: #fff;\n    background-color: #f8f8f8;\n    border-color: #40af2a;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}
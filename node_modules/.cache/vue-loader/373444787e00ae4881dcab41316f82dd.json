{"remainingRequest":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shafimuhammad/Sites/billig.testingsanctum/src/views/leads/components/salesperson-vue.vue?vue&type=template&id=949e2f9a&scoped=true&","dependencies":[{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/src/views/leads/components/salesperson-vue.vue","mtime":1616068394799},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
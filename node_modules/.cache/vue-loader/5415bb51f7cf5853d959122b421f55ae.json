{"remainingRequest":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/abeerwaseem/Sites/cloudtres-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abeerwaseem/Sites/cloudtres-front/src/views/Register.vue?vue&type=template&id=63ae9146&scoped=true&","dependencies":[{"path":"/Users/abeerwaseem/Sites/cloudtres-front/src/views/Register.vue","mtime":1618827261434},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
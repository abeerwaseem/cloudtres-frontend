{"remainingRequest":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shafimuhammad/Sites/paymentspncworkbench/src/views/projects/components/salesteamlead_projects.vue?vue&type=template&id=2c5f0392&scoped=true&","dependencies":[{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/src/views/projects/components/salesteamlead_projects.vue","mtime":1616140486564},{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
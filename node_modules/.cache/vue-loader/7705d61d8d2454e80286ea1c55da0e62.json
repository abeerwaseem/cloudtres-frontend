{"remainingRequest":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shafimuhammad/Sites/paymentspncworkbench/src/views/project-status/components/admin-vue.vue?vue&type=template&id=76afd56e&scoped=true&","dependencies":[{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/src/views/project-status/components/admin-vue.vue","mtime":1609744687414},{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/paymentspncworkbench/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
{"remainingRequest":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shafimuhammad/Sites/billig.testingsanctum/src/views/dashboard/components/client_dashboard.vue?vue&type=template&id=1485d475&scoped=true&","dependencies":[{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/src/views/dashboard/components/client_dashboard.vue","mtime":1611775767952},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shafimuhammad/Sites/billig.testingsanctum/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
{"remainingRequest":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/abeerwaseem/Sites/cloudtres-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abeerwaseem/Sites/cloudtres-front/src/views/packages/showpackage/admin-package-show.vue?vue&type=template&id=328d59b6&scoped=true&","dependencies":[{"path":"/Users/abeerwaseem/Sites/cloudtres-front/src/views/packages/showpackage/admin-package-show.vue","mtime":1617381201000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abeerwaseem/Sites/cloudtres-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}